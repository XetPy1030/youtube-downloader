"""
–û–±—â–∏–µ —Ö–µ–Ω–¥–ª–µ—Ä—ã –±–æ—Ç–∞
"""
from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command, CommandStart
from aiogram.utils.keyboard import InlineKeyboardBuilder

from app.models import User
from app.services.user_service import UserService
from app.services.logger import get_logger

logger = get_logger(__name__)
router = Router()


@router.message(CommandStart())
async def start_handler(message: Message, user: User):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    
    welcome_text = f"""
üé¨ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ YouTube Downloader!</b>

–ü—Ä–∏–≤–µ—Ç, {user.full_name}! üëã

–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —Å–∫–∞—á–∏–≤–∞—Ç—å –≤–∏–¥–µ–æ —Å YouTube –±—ã—Å—Ç—Ä–æ –∏ —É–¥–æ–±–Ω–æ.

<b>–ß—Ç–æ —è —É–º–µ—é:</b>
‚Ä¢ üì• –°–∫–∞—á–∏–≤–∞—Ç—å –≤–∏–¥–µ–æ —Å YouTube
‚Ä¢ üéµ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ –≤ MP3
‚Ä¢ üìä –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ
‚Ä¢ üìà –í–µ—Å—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤–∞—à–∏—Ö —Å–∫–∞—á–∏–≤–∞–Ω–∏–π

<b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:</b>
1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ YouTube –≤–∏–¥–µ–æ
2. –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –∏ —Ñ–æ—Ä–º–∞—Ç
3. –ü–æ–ª—É—á–∏—Ç–µ —Ñ–∞–π–ª!

<b>–ö–æ–º–∞–Ω–¥—ã:</b>
/help - –ü–æ–º–æ—â—å –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
/stats - –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
/history - –ò—Å—Ç–æ—Ä–∏—è —Å–∫–∞—á–∏–≤–∞–Ω–∏–π

–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å! üöÄ
    """
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–æ–ª–µ–∑–Ω—ã–º–∏ —Å—Å—ã–ª–∫–∞–º–∏
    builder = InlineKeyboardBuilder()
    builder.button(text="üìã –ü–æ–º–æ—â—å", callback_data="help")
    builder.button(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats")
    builder.adjust(2)
    
    await message.answer(
        welcome_text,
        reply_markup=builder.as_markup(),
        parse_mode="HTML"
    )
    
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.telegram_id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")


@router.message(Command("help"))
async def help_handler(message: Message, user: User):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    
    help_text = """
üìñ <b>–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é</b>

<b>üé¨ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ:</b>
‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ YouTube –≤–∏–¥–µ–æ
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç—ã: youtube.com, youtu.be
‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 1 —á–∞—Å
‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: 50 –ú–ë

<b>üì± –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:</b>
‚Ä¢ MP4 (–≤–∏–¥–µ–æ) - —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è
‚Ä¢ MP3 (—Ç–æ–ª—å–∫–æ –∞—É–¥–∏–æ)

<b>üéØ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—á–µ—Å—Ç–≤–∞:</b>
‚Ä¢ 144p, 240p, 360p, 480p, 720p
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è –ª—É—á—à–µ–µ –¥–æ—Å—Ç—É–ø–Ω–æ–µ

<b>‚ö° –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:</b>
‚Ä¢ –ú–∞–∫—Å–∏–º—É–º 5 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É
‚Ä¢ –§–∞–π–ª—ã —Ö—Ä–∞–Ω—è—Ç—Å—è 7 –¥–Ω–µ–π

<b>üîß –ö–æ–º–∞–Ω–¥—ã:</b>
/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/stats - –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
/history - –ò—Å—Ç–æ—Ä–∏—è —Å–∫–∞—á–∏–≤–∞–Ω–∏–π

<b>üÜò –ü—Ä–æ–±–ª–µ–º—ã?</b>
‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å—Å—ã–ª–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è
‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤–∏–¥–µ–æ –¥–æ—Å—Ç—É–ø–Ω–æ
‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ

<i>–ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –Ω–µ —Ä–µ—à–∞–µ—Ç—Å—è, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.</i>
    """
    
    await message.answer(help_text, parse_mode="HTML")


@router.message(Command("stats"))
async def stats_handler(message: Message, user: User):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stats"""
    
    stats = await UserService.get_user_stats(user.telegram_id)
    if not stats:
        await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
        return
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–æ–≤
    total_size = stats['total_download_size']
    if total_size > 1024 * 1024 * 1024:
        size_text = f"{total_size / (1024 * 1024 * 1024):.1f} –ì–ë"
    elif total_size > 1024 * 1024:
        size_text = f"{total_size / (1024 * 1024):.1f} –ú–ë"
    elif total_size > 1024:
        size_text = f"{total_size / 1024:.1f} –ö–ë"
    else:
        size_text = f"{total_size} –ë"
    
    stats_text = f"""
üìä <b>–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>

üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {stats['full_name']}
üÜî <b>ID:</b> <code>{stats['user_id']}</code>

üì• <b>–í—Å–µ–≥–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏–π:</b> {stats['total_downloads']}
üíæ <b>–û–±—â–∏–π —Ä–∞–∑–º–µ—Ä:</b> {size_text}
üìÖ <b>–°–µ–≥–æ–¥–Ω—è:</b> {stats['today_downloads']}
üìà <b>–ó–∞ –Ω–µ–¥–µ–ª—é:</b> {stats['week_downloads']}

üïê <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è:</b> {stats['created_at'].strftime('%d.%m.%Y %H:%M')}
    """
    
    if stats['last_download']:
        stats_text += f"\n‚è∞ <b>–ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ:</b> {stats['last_download'].strftime('%d.%m.%Y %H:%M')}"
    
    if stats['is_admin']:
        stats_text += "\n\nüëë <b>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</b>"
    
    await message.answer(stats_text, parse_mode="HTML")


@router.message(Command("history"))
async def history_handler(message: Message, user: User):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /history"""
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–∫–∞—á–∏–≤–∞–Ω–∏–π
    downloads = await user.download_history.filter().order_by("-created_at").limit(10).prefetch_related("video")
    
    if not downloads:
        await message.answer("üì≠ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∏—Å—Ç–æ—Ä–∏–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–π")
        return
    
    history_text = "üìã <b>–ò—Å—Ç–æ—Ä–∏—è —Å–∫–∞—á–∏–≤–∞–Ω–∏–π</b>\n\n"
    
    for download in downloads:
        status_emoji = {
            "completed": "‚úÖ",
            "failed": "‚ùå",
            "downloading": "‚è≥",
            "pending": "üïê",
            "cancelled": "üö´"
        }.get(download.status, "‚ùì")
        
        date_str = download.created_at.strftime('%d.%m %H:%M')
        title = download.video.title[:50] + "..." if len(download.video.title) > 50 else download.video.title
        
        history_text += f"{status_emoji} <b>{title}</b>\n"
        history_text += f"    üìÖ {date_str} | {download.quality or '–∞–≤—Ç–æ'} | {download.format_type}\n\n"
    
    builder = InlineKeyboardBuilder()
    builder.button(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="history_refresh")
    
    await message.answer(
        history_text,
        reply_markup=builder.as_markup(),
        parse_mode="HTML"
    )


@router.callback_query(F.data == "help")
async def help_callback(callback, user: User):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –¥–ª—è –ø–æ–º–æ—â–∏"""
    await callback.message.edit_text(
        "üìñ –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –ø–æ–º–æ—â–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help",
        parse_mode="HTML"
    )
    await callback.answer()


@router.callback_query(F.data == "stats")
async def stats_callback(callback, user: User):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    await callback.message.edit_text(
        "üìä –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /stats",
        parse_mode="HTML"
    )
    await callback.answer()


@router.callback_query(F.data == "history_refresh")
async def history_refresh_callback(callback, user: User):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏"""
    await callback.answer("üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é...")
    # –ò–º–∏—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏
    await callback.message.edit_text(
        "üìã –ò—Å—Ç–æ—Ä–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /history –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.",
        parse_mode="HTML"
    )